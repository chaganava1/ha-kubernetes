---
- name: Get cluster interface
  ansible.builtin.set_fact:
    cluster_interface: "{{ item }}"
  with_items:
    - "{{ ansible_interfaces }}"
  when:
    - hostvars[inventory_hostname]['ansible_' + item]['ipv4'] is defined
    - hostvars[inventory_hostname]['ansible_' + item]['ipv4']['address'] == node_ip

- name: Increase VRRP Priority of lead controller higher for determinism
  ansible.builtin.set_fact:
    vrrp_pri: "{{ vrrp_pri | int + 1 }}"
  when: inventory_hostname == lead_controller

  ###
  # Deploy keepalived
  #

- name: Deploy keepalived
  ansible.builtin.include_role:
    name: evrardjp.keepalived
  vars:
    keepalived_global_defs:
      - enable_script_security
      - script_user "{{ ansible_user }}"
    keepalived_scripts:
      chk_haproxy:
        check_script: "pgrep haproxy"
    keepalived_instances:
      vrrp:
        state: MASTER
        interface: "{{ cluster_interface }}"
        virtual_router_id: 42
        priority: "{{ vrrp_pri }}"
        advert_int: 1
        unicast_src_ip: "{{ node_ip }}"
        authentication_password: fregsr9
        vips:
          - "{{ vrrp_virtual_ip }} dev {{ cluster_interface }}"
        unicast_peers: "{{ groups.controllers | map('extract', hostvars, ['node_ip']) | list }}"
        track_scripts:
          - chk_haproxy

###
# Deploy HA Proxy
#

- name: Set backend server var
  ansible.builtin.template:
    src: backend-servers.j2
    dest: "{{ role_path }}/vars/backend-servers.yml"
    mode: "0644"
  delegate_to: localhost

- name: Include backend_servers var
  ansible.builtin.include_vars: backend-servers.yml

- name: Deploy HAProxy
  ansible.builtin.include_role:
    name: robertdebock.haproxy
  vars:
    haproxy_frontends:
      - name: k8s-api
        address: "*"
        port: "{{ haproxy_listen_port }}"
        default_backend: k8s-api
        mode: tcp
        option: tcplog
    haproxy_backend_default_balance: roundrobin
    haproxy_backends:
      - name: k8s-api
        mode: tcp
        httpcheck: false
        option: tcplog
        servers: "{{ backend_servers }}"
        port: 6443
        options:
          - check
          - check-ssl
          - "verify none"

- name: Wait for API Reachability
  ansible.builtin.wait_for:
    host: "{{ vrrp_virtual_ip }}"
    port: "{{ haproxy_listen_port }}"
    delay: 2
